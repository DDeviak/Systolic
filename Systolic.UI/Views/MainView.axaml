<UserControl
    ClipToBounds="False"
    FontFamily="avares://Avalonia.Fonts.Inter/Assets#Inter"
    ZoomControl="{Binding #EditorControl.ZoomControl}"
    d:DesignHeight="740"
    d:DesignWidth="1030"
    mc:Ignorable="d"
    x:Class="Systolic.UI.Views.MainView"
    x:CompileBindings="True"
    x:DataType="viewModels:MainViewViewModel"
    xmlns="https://github.com/avaloniaui"
    xmlns:converters="clr-namespace:Systolic.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editor="clr-namespace:NodeEditor.Controls;assembly=NodeEditorAvalonia"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:overrides="clr-namespace:Systolic.UI.ViewModels.Overrides"
    xmlns:viewModels="clr-namespace:Systolic.UI.ViewModels"
    xmlns:views1="clr-namespace:Systolic.UI.Views"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.DataContext>
        <viewModels:MainViewViewModel />
    </Design.DataContext>
    <UserControl.KeyBindings>
        <KeyBinding Command="{Binding NewCommand}" Gesture="{OnPlatform macOS=CMD+N, iOS=CMD+N, Default=Ctrl+N}" />
        <KeyBinding Command="{Binding OpenCommand}" Gesture="{OnPlatform macOS=CMD+O, iOS=CMD+O, Default=Ctrl+O}" />
        <KeyBinding Command="{Binding SaveCommand}" Gesture="{OnPlatform macOS=CMD+S, iOS=CMD+S, Default=Ctrl+S}" />
        <KeyBinding Command="{Binding Editor.Drawing.CutNodesCommand, FallbackValue={x:Null}}" Gesture="{OnPlatform macOS=CMD+X, iOS=CMD+X, Default=Ctrl+X}" />
        <KeyBinding Command="{Binding Editor.Drawing.CopyNodesCommand, FallbackValue={x:Null}}" Gesture="{OnPlatform macOS=CMD+C, iOS=CMD+C, Default=Ctrl+C}" />
        <KeyBinding Command="{Binding Editor.Drawing.PasteNodesCommand, FallbackValue={x:Null}}" Gesture="{OnPlatform macOS=CMD+V, iOS=CMD+V, Default=Ctrl+V}" />
        <KeyBinding Command="{Binding Editor.Drawing.DuplicateNodesCommand, FallbackValue={x:Null}}" Gesture="{OnPlatform macOS=CMD+D, iOS=CMD+D, Default=Ctrl+D}" />
        <KeyBinding Command="{Binding Editor.Drawing.DeleteNodesCommand, FallbackValue={x:Null}}" Gesture="Delete" />
        <KeyBinding Command="{Binding Editor.Drawing.SelectAllNodesCommand, FallbackValue={x:Null}}" Gesture="{OnPlatform macOS=CMD+A, iOS=CMD+A, Default=Ctrl+A}" />
        <KeyBinding Command="{Binding Editor.Drawing.DeselectAllNodesCommand, FallbackValue={x:Null}}" Gesture="Escape" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ResetZoomCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+D0,
                                 iOS=CMD+D0,
                                 Default=Ctrl+D0}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ResetZoomCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+NumPad0,
                                 iOS=CMD+NumPad0,
                                 Default=Ctrl+NumPad0}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ResetZoomCommand, FallbackValue={x:Null}}"
            Gesture="Z"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FitCanvasCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+D1,
                                 iOS=CMD+D1,
                                 Default=Ctrl+D1}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FitCanvasCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+NumPad1,
                                 iOS=CMD+NumPad1,
                                 Default=Ctrl+NumPad1}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FitCanvasCommand, FallbackValue={x:Null}}"
            Gesture="X"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FitToFillCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+D2,
                                 iOS=CMD+D2,
                                 Default=Ctrl+D2}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FitToFillCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+NumPad2,
                                 iOS=CMD+NumPad2,
                                 Default=Ctrl+NumPad2}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FillCanvasCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+D3,
                                 iOS=CMD+D3,
                                 Default=Ctrl+D3}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.FillCanvasCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+NumPad3,
                                 iOS=CMD+NumPad3,
                                 Default=Ctrl+NumPad3}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomInCommand, FallbackValue={x:Null}}"
            Gesture="Add"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomInCommand, FallbackValue={x:Null}}"
            Gesture="OemPlus"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomInCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+NumPad0,
                                 iOS=CMD+Add,
                                 Default=Ctrl+Add}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomInCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+OemPlus,
                                 iOS=CMD+OemPlus,
                                 Default=Ctrl+OemPlus}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomOutCommand, FallbackValue={x:Null}}"
            Gesture="Subtract"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomOutCommand, FallbackValue={x:Null}}"
            Gesture="OemMinus"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomOutCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+Subtract,
                                 iOS=CMD+Subtract,
                                 Default=Ctrl+Subtract}"
            x:CompileBindings="False" />
        <KeyBinding
            Command="{Binding #EditorControl.ZoomControl.ZoomOutCommand, FallbackValue={x:Null}}"
            Gesture="{OnPlatform macOS=CMD+OemMinus,
                                 iOS=CMD+OemMinus,
                                 Default=Ctrl+OemMinus}"
            x:CompileBindings="False" />
    </UserControl.KeyBindings>
    <DockPanel>
        <views1:MenuView
            DockPanel.Dock="Top"
            ZoomControl="{Binding #EditorControl.ZoomControl}"
            x:CompileBindings="False" />
        <Separator
            Classes="horizontal"
            DockPanel.Dock="Top"
            IsVisible="False" />
        <Grid>
            <Grid.Resources>
                <x:Double x:Key="ToolboxWidth">200</x:Double>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding IsToolboxVisible, Converter={x:Static converters:ColumnWidthConverter.Instance}, ConverterParameter={StaticResource ToolboxWidth}}" />
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" IsVisible="{Binding IsToolboxVisible}">
                <Separator Classes="vertical" DockPanel.Dock="Right" />
                <editor:Toolbox
                    DockPanel.Dock="Top"
                    Name="ToolboxView"
                    TemplatesSource="{Binding Editor.Templates}" />
                <Grid
                    ColumnDefinitions="*,*,*"
                    DataContext="{Binding Editor.Drawing}"
                    DockPanel.Dock="Bottom"
                    Margin="8"
                    RowDefinitions="*,*"
                    VerticalAlignment="Bottom">
                    <Button
                        Content="Start"
                        Grid.Column="0"
                        Grid.Row="" />
                    <Button
                        Content="Stop"
                        Grid.Column="1"
                        Grid.Row="" />
                    <Button
                        Content="Step"
                        Grid.Column="2"
                        Grid.Row="" />
                    <Slider
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Grid.Row="1" />
                </Grid>
            </DockPanel>
            <ThemeVariantScope
                Grid.Column="1"
                Grid.ColumnSpan="2"
                RequestedThemeVariant="Light">
                <editor:Editor DrawingSource="{Binding Editor.Drawing, FallbackValue={x:Null}}" Name="EditorControl" />
            </ThemeVariantScope>
            <GridSplitter Background="Transparent" Grid.Column="1" />
        </Grid>
    </DockPanel>
</UserControl>